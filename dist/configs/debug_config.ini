client.command_socket = ../../var/run/leprechaun/client.sock
# we want to log our errors, and specify where
client.error_log = ../../var/log/leprechaun/error.log
# we want to log our info about app to know whats going on
client.info_log = ../../var/log/leprechaun/info.log
# path to recipes directory
client.recipes_path = ../../dist/recipes
# pid file holding pid of process
client.pid_file = ../../var/run/leprechaun/client.pid
# lock file is only present when client is busy
client.lock_file = ../../var/run/leprechaun/client.lock

# Specify dir where workers will output
client.worker_output_dir = ../../var/log/leprechaun/workers.output

# number of workers that can work in parallel
# workers are working on steps, basically on commands
# recipe steps can be do in parallel
# other that are on wait will be retryed every time after
# client.retry_recipe_after times until they are done
client.max_allowed_workers = 5

# define in seconds
client.retry_recipe_after = 10

#client.smtp_host = 
#client.smtp_username = 
#client.smtp_password =
#client.notifications_email = 

server.command_socket = ../../var/run/leprechaun/server.sock
# server is listening on this port
server.port = 11400
# dedicated server error log
server.error_log = ../../var/log/leprechaun/server/error.log
# dedicated server info log
server.info_log = ../../var/log/leprechaun/server/info.log
# path to recipes folder, it is same like for client, but also it can be changed
server.recipes_path = ../../dist/recipes
# pid file holding pid of process
server.pid_file = ../../var/run/leprechaun/server.pid
# lock file is only present when client is busy
server.lock_file = ../../var/run/leprechaun/server.lock

# Specify dir where workers will output
server.worker_output_dir = ../../var/log/leprechaun/workers.output

# number of workers that can work in parallel
# workers are working on steps, basically on commands
# recipe steps can be do in parallel
# other that are on wait will be retryed every time after
# server.retry_recipe_after times until they are done
server.max_allowed_workers = 5

# define in seconds
server.retry_recipe_after = 10

#server.smtp_host =
#server.smtp_username =
#server.smtp_password =
#server.notifications_email =

server.domain = "example.com"

cron.command_socket = ../../var/run/leprechaun/cron.sock
# we want to log our errors, and specify where
cron.error_log = ../../var/log/leprechaun/error.log
# we want to log our info about app to know whats going on
cron.info_log = ../../var/log/leprechaun/info.log
# path to recipes directory
cron.recipes_path = ../../dist/recipes
# pid file holding pid of process
cron.pid_file = ../../var/run/leprechaun/cron.pid
# lock file is only present when client is busy
cron.lock_file = ../../var/run/leprechaun/cron.lock

# Specify dir where workers will output
cron.worker_output_dir = ../../var/log/leprechaun/workers.output

# number of workers that can work in parallel
# workers are working on steps, basically on commands
# recipe steps can be do in parallel
# other that are on wait will be retryed every time after
# client.retry_recipe_after times until they are done
cron.max_allowed_workers = 5

# define in seconds
cron.retry_recipe_after = 10

#cron.smtp_host = 
#cron.smtp_username = 
#cron.smtp_password = 
#cron.notifications_email = 